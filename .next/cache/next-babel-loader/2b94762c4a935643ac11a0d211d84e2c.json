{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios';\n\nvar Configuration =\n/*#__PURE__*/\nfunction () {\n  function Configuration() {\n    _classCallCheck(this, Configuration);\n  }\n\n  _createClass(Configuration, null, [{\n    key: \"initialize\",\n\n    /**\r\n     * Global http request configuration\r\n     */\n    value: function initialize() {\n      axios.interceptors.request.use(function (config) {\n        // Do something before request is sent\n        return config;\n      }, function () {\n        // Do something with request error\n        console.log(error);\n        return _Promise.reject(error);\n      });\n      axios.interceptors.response.use(function (response) {\n        console.log(response); // Do something with response data\n\n        return response;\n      }, function (error) {\n        return _Promise.reject(error);\n      });\n    }\n  }, {\n    key: \"clientSessionId\",\n    value: function clientSessionId() {\n      var text = \"\";\n      var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n      for (var i = 0; i < 11; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n      }\n\n      return text;\n    }\n  }, {\n    key: \"setHeader\",\n    value: function setHeader(key, value) {\n      axios.defaults.headers.common[key] = value;\n    }\n  }]);\n\n  return Configuration;\n}();\n\nexport { Configuration as default };","map":null,"metadata":{},"sourceType":"module"}