{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from 'react';\nimport Head from 'next/head';\nimport CMS from '../../lib/api/cms';\nimport Carousel from '../../components/Carousel/carousel';\nimport Channels from '../../components/Channels/channels';\nimport DownloadApp from '../../components/DownloadApp/downloadApp';\nimport { isMobile } from 'react-device-detect';\nimport Configuration from '../../lib/api/configuration';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getCookie\", cookieName => {\n      console.log(cookieName);\n      var match = document.cookie.match(new RegExp('(^| )' + cookieName + '=([^;]+)'));\n      if (match) return match[2];\n    });\n\n    _defineProperty(this, \"showMore\", event => {\n      let page = this.state.page;\n      this.setState({\n        page: page + 1\n      });\n      let queryCondition = {\n        page: page + 1\n      };\n      CMS.getCoupons(queryCondition).then(response => {\n        this.setState({\n          coupons: this.state.coupons.concat(response.data.data)\n        });\n      });\n    });\n\n    this.state = {\n      carousel: [],\n      carousel_sliders: [],\n      promotions: [],\n      launchers: [],\n      products: [],\n      sellers: [],\n      posts: [],\n      news: [],\n      sliders: [],\n      coupons: [],\n      ms: 0,\n      secs: 3600,\n      timer: 0,\n      isShowCountDown: false,\n      isShowTicker: false,\n      page: 1,\n      userId: '',\n      apiToken: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      apiToken: this.getCookie('api_token'),\n      userId: this.getCookie('user_id')\n    }, () => console.log(this.state));\n    this.getBanners();\n    this.getSellers();\n  }\n\n  componentWillMount() {\n    this.interval = setInterval(() => {\n      this.setState({\n        ms: 1\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getBanners() {\n    CMS.getBanner().then(response => {\n      let sliders = response.data && response.data.data;\n      sliders && sliders.map((item, key) => item.slider_type == \"carousel\" ? this.setState({\n        carousel_sliders: item.slider_items\n      }) : \"\");\n      this.setState({\n        sliders: response.data && response.data.data\n      });\n    });\n  }\n\n  getSellers() {\n    CMS.getSellers().then(response => {\n      this.setState({\n        sellers: response && response.data\n      });\n    });\n  }\n\n  mobileCheck() {\n    return isMobile;\n  }\n\n  render() {\n    return __jsx(Fragment, null, __jsx(Head, null, __jsx(\"style\", null, `body {\n                            background: url(${this.state.backgroundImage}) top center no-repeat fixed;\n                            background-size: cover;\n                        }\n                        @media (max-width: 575.98px) {\n                            #root > main {\n                                padding-left: 0rem;\n                            }\n                        }`)), __jsx(Carousel, _extends({}, this.props, {\n      mobileCheck: this.mobileCheck,\n      userId: this.state.userId,\n      carousel: [...this.state.sliders],\n      carousel_sliders: this.state.carousel_sliders\n    })), __jsx(Channels, _extends({}, this.props, {\n      sellers: this.state.sellers,\n      apiToken: this.state.apiToken,\n      userId: this.state.userId\n    })), __jsx(DownloadApp, null));\n  }\n\n}\n\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}