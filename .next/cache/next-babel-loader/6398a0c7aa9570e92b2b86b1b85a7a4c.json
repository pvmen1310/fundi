{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios';\nimport APIConfig from 'APIConfig';\nimport CMS from 'API/cms';\n\nvar Configuration =\n/*#__PURE__*/\nfunction () {\n  function Configuration() {\n    _classCallCheck(this, Configuration);\n  }\n\n  _createClass(Configuration, null, [{\n    key: \"initialize\",\n\n    /**\r\n     * Global http request configuration\r\n     */\n    value: function initialize() {\n      axios.interceptors.request.use(function (config) {\n        // Do something before request is sent\n        return config;\n      }, function () {\n        console.log(1234123); // Do something with request error\n\n        return _Promise.reject(error);\n      });\n      axios.interceptors.response.use(function (response) {\n        // Do something with response data\n        return response;\n      }, function (error) {\n        console.log(1234123); // Do something with response error\n\n        if (!error.response) {\n          // Network error\n          console.log(1234123);\n        } else {\n          console.log(1234123);\n          return _Promise.reject(error.response);\n        }\n      });\n    }\n  }, {\n    key: \"clientSessionId\",\n    value: function clientSessionId() {\n      var text = \"\";\n      var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n      for (var i = 0; i < 11; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n      }\n\n      return text;\n    }\n  }, {\n    key: \"setHeader\",\n    value: function setHeader(key, value) {\n      axios.defaults.headers.common[key] = value;\n    }\n  }]);\n\n  return Configuration;\n}();\n\nexport { Configuration as default };","map":{"version":3,"sources":["D:/xampp/htdocs/fundi/fundi_new/fundi-next/lib/api/configuration.js"],"names":["axios","APIConfig","CMS","Configuration","interceptors","request","use","config","console","log","reject","error","response","text","possible","i","charAt","Math","floor","random","length","key","value","defaults","headers","common"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,GAAP,MAAgB,SAAhB;;IAEqBC,a;;;;;;;;;;AACjB;;;iCAGoB;AAChBH,MAAAA,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,UAACC,MAAD,EAAU;AACN;AACA,eAAOA,MAAP;AACH,OAJL,EAKI,YAAK;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADC,CAED;;AACA,eAAO,SAAQC,MAAR,CAAeC,KAAf,CAAP;AACH,OATL;AAYAX,MAAAA,KAAK,CAACI,YAAN,CAAmBQ,QAAnB,CAA4BN,GAA5B,CACI,UAASM,QAAT,EAAmB;AACf;AACA,eAAOA,QAAP;AACH,OAJL,EAKI,UAASD,KAAT,EAAgB;AACZH,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADY,CAEZ;;AACA,YAAI,CAACE,KAAK,CAACC,QAAX,EAAqB;AACjB;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,SAHD,MAGO;AACHD,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,iBAAO,SAAQC,MAAR,CAAeC,KAAK,CAACC,QAArB,CAAP;AACH;AACJ,OAfL;AAiBH;;;sCAEuB;AACpB,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,QAAQ,GAAG,gEAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB;AACIF,QAAAA,IAAI,IAAIC,QAAQ,CAACE,MAAT,CAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,QAAQ,CAACM,MAApC,CAAhB,CAAR;AADJ;;AAGA,aAAOP,IAAP;AACH;;;8BAEgBQ,G,EAAKC,K,EAAO;AACzBtB,MAAAA,KAAK,CAACuB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BJ,GAA9B,IAAqCC,KAArC;AACH;;;;;;SA/CgBnB,a","sourcesContent":["import axios from 'axios';\r\nimport APIConfig from 'APIConfig';\r\nimport CMS from 'API/cms'\r\n\r\nexport default class Configuration {\r\n    /**\r\n     * Global http request configuration\r\n     */\r\n    static initialize() {\r\n        axios.interceptors.request.use(\r\n            (config)=>{\r\n                // Do something before request is sent\r\n                return config;\r\n            },\r\n            ()=> {\r\n                console.log(1234123);\r\n                // Do something with request error\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n\r\n        axios.interceptors.response.use(\r\n            function(response) {\r\n                // Do something with response data\r\n                return response;\r\n            },\r\n            function(error) {\r\n                console.log(1234123);\r\n                // Do something with response error\r\n                if (!error.response) {\r\n                    // Network error\r\n                    console.log(1234123);\r\n                } else {\r\n                    console.log(1234123);\r\n                    return Promise.reject(error.response);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    static clientSessionId(){\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        for (var i = 0; i < 11; i++)\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n        return text;\r\n    }\r\n\r\n    static setHeader(key, value) {\r\n        axios.defaults.headers.common[key] = value;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}