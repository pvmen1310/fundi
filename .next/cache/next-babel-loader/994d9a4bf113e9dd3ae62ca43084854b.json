{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n// Carousel\nimport React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport './carousel.scss';\nimport GoogleAds from '../GoogleAds';\nexport default class Carousel extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getNewTabUrl\", gameData => {\n      if (gameData) {\n        let url = '';\n\n        if (gameData.launch_by_player_url) {\n          url = 'http://' + gameData.launch_by_player_url;\n        } else {\n          url = `${gameData.scheme}://${window.location.host}/${this.props.locale}/slots/launcher/${gameData.query}`;\n        }\n\n        url = url.replace(/([^:]\\/)\\/+/g, \"$1\");\n        window.open(url, '', 'width=1250, height=750, left=0,top=0,menu=no, directories=no, titlebar=no, location=no, toolbar=no,scrollbars=yes,resizable=yes');\n      }\n    });\n\n    this.state = {\n      currentSlide: 0,\n      carousel_sliders: []\n    };\n  }\n\n  render() {\n    const config = {\n      arrows: false,\n      dots: true,\n      infinite: true,\n      speed: 500,\n      autoplay: true,\n      autoplaySpeed: 1000,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    };\n    let carouselNav = '';\n\n    if (this.props.mobileCheck()) {\n      carouselNav = !this.props.full && __jsx(\"nav\", {\n        className: \"carousel-nav\"\n      }, __jsx(\"ul\", {\n        className: \"carousel-nav-menu\"\n      }, this.props.carousel && this.props.carousel.map((item, key) => item.slider_type != \"carousel\" ? __jsx(\"a\", {\n        href: item.slider_items[0].link_to_url,\n        rel: \"nofollow\",\n        className: \"item ml-1 mr-1\",\n        target: item.slider_items[0].link_target,\n        key: key\n      }, __jsx(\"img\", {\n        src: item.slider_items[0].image_src\n      })) : \"\")));\n    } else {\n      carouselNav = !this.props.full && __jsx(\"nav\", {\n        className: \"carousel-nav\"\n      }, __jsx(\"ul\", {\n        className: \"carousel-nav-menu\"\n      }, this.props.carousel && this.props.carousel.map((item, key) => item.slider_type != \"carousel\" ? __jsx(\"a\", {\n        href: item.slider_items[0].link_to_url,\n        rel: \"nofollow\",\n        className: \"item mt-2 mb-2\",\n        target: item.slider_items[0].link_target,\n        key: key\n      }, __jsx(\"img\", {\n        src: item.slider_items[0].image_src\n      })) : \"\")));\n    }\n\n    return __jsx(\"section\", {\n      className: \"carousel\"\n    }, __jsx(\"div\", {\n      className: \"container\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: this.props.full ? 'carousel-box-full' : 'carousel-box'\n    }, __jsx(Slider, _extends({\n      ref: slider => this.slider = slider\n    }, config), this.props.carousel && this.props.carousel.map((item, key) => item.slider_type != \"carousel\" ? __jsx(\"a\", {\n      href: item.slider_items[0].link_to_url + this.props.userId,\n      rel: \"nofollow\",\n      className: \"item mt-2 mb-2\",\n      target: item.slider_items[0].link_target,\n      key: key\n    }, __jsx(\"img\", {\n      src: item.slider_items[0].image_src\n    })) : \"\"))))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}