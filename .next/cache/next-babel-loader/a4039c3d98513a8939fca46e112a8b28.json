{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from 'react';\nimport CMS from '../../lib/api';\nimport Head from 'next/head';\nimport CategoryFilter from '../../components/Category/CategoryFilter';\nimport SearchList from '../../components/Search/SearchList';\nimport { isMobile } from 'react-device-detect';\n\nclass Category extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onChangeSearchOrder\", event => {\n      let orderBy = '';\n      let orderType = '';\n\n      if (event.currentTarget.value == 1) {\n        orderBy = 'regular_price';\n        orderType = 'ASC';\n      }\n\n      if (event.currentTarget.value == 2) {\n        orderBy = 'regular_price';\n        orderType = 'DESC';\n      }\n\n      if (event.currentTarget.value == 3) {\n        orderBy = 'discount_percent';\n        orderType = 'DESC';\n      }\n\n      this.setState({\n        orderBy: orderBy,\n        orderType: orderType,\n        currentPage: 1\n      });\n      let queryCondition = {\n        'name': this.props.searchName,\n        'cat_name': this.props.catUrl,\n        'page': this.state.currentPage,\n        'min_price': this.state.minPrice,\n        'max_price': this.state.maxPrice,\n        'order_by': orderBy,\n        'order_type': orderType\n      };\n      this.getProductsByCondition(queryCondition, true);\n    });\n\n    _defineProperty(this, \"onChangePriceRange\", event => {\n      let minPrice = '';\n      let maxPrice = '';\n\n      if (event.currentTarget.value == 1) {\n        maxPrice = 500000;\n      }\n\n      if (event.currentTarget.value == 2) {\n        minPrice = 500000;\n        maxPrice = 1000000;\n      }\n\n      if (event.currentTarget.value == 3) {\n        minPrice = 1000000;\n        maxPrice = 5000000;\n      }\n\n      if (event.currentTarget.value == 4) {\n        minPrice = 5000000;\n        maxPrice = 10000000;\n      }\n\n      if (event.currentTarget.value == 5) {\n        minPrice = 10000000;\n      }\n\n      this.setState({\n        minPrice: minPrice,\n        maxPrice: maxPrice,\n        currentPage: 1\n      });\n      let queryCondition = {\n        'name': this.props.searchName,\n        'cat_name': this.props.catUrl,\n        'page': this.state.currentPage,\n        'min_price': minPrice,\n        'max_price': maxPrice,\n        'orderBy': this.state.orderBy,\n        'orderType': this.state.orderType\n      };\n      this.getProductsByCondition(queryCondition, true);\n    });\n\n    _defineProperty(this, \"showMore\", event => {\n      let currentPage = this.state.currentPage;\n      let queryCondition = {\n        'name': this.props.searchName,\n        'cat_name': this.props.catUrl,\n        'page': currentPage + 1,\n        'per_page': 20,\n        'order_by': this.state.orderBy,\n        'order_type': this.state.orderType,\n        'min_price': this.state.minPrice,\n        'max_price': this.state.maxPrice\n      };\n      this.getProductsByCondition(queryCondition, false);\n    });\n\n    this.state = {\n      currentPage: 1,\n      total: 0,\n      products: this.props.products,\n      orderBy: '',\n      orderType: '',\n      minPrice: '',\n      maxPrice: '',\n      catName: '',\n      hideShowMore: 0,\n      post: {},\n      comments: []\n    };\n  }\n\n  mobileCheck() {\n    return isMobile;\n  }\n\n  getParameterByName(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n  }\n\n  getProductsByCondition(queryCondition, isResetPageNumber = true) {\n    let products = this.state.products;\n    let currentPage = this.state.currentPage;\n    CMS.getProducts(queryCondition).then(response => {\n      if (!isResetPageNumber) {\n        this.setState({\n          products: this.state.products.concat(response.data.data),\n          total: response.data.pagination && response.data.pagination.total,\n          currentPage: currentPage + 1\n        });\n      } else {\n        this.setState({\n          products: response.data.data,\n          total: response.data.pagination && response.data.pagination.total\n        });\n      }\n\n      if (response.data.pagination && response.data.pagination.current_page == response.data.pagination.total_page) {\n        this.setState({\n          hideShowMore: 1\n        });\n      } else {\n        this.setState({\n          hideShowMore: 0\n        });\n      }\n    });\n  }\n\n  getPost(slug) {\n    CMS.getPosts(slug).then(response => {\n      this.setState({\n        post: response.data[0]\n      });\n      CMS.getComments(response.data[0].id).then(response => {\n        this.setState({\n          comments: response.data\n        });\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Fragment, null, __jsx(Head, null, __jsx(\"link\", {\n      key: \"shortcut_icon\",\n      rel: \"shortcut icon\",\n      href: \"/assets/images/fundi-logo.png\"\n    }), __jsx(\"link\", {\n      key: \"apple-touch-icon\",\n      rel: \"apple-touch-icon\",\n      href: \"/assets/images/fundi-logo.png\"\n    }), __jsx(\"title\", null, \"Danh mục \" + this.props.catName), __jsx(\"meta\", {\n      name: \"description\",\n      content: \"Kết quả thuộc \" + this.props.catName + \": \" + \" sản phẩm giảm giá trên Fundi.vn\" + \". Khuyến mãi HOT, coupon giảm giá, bài review để mua hàng tại Lazada, Tiki, Adayroi, Lotte, FPT shop, Nguyễn Kim và các sàn TMĐT khác.\"\n    })), __jsx(CategoryFilter, _extends({}, this.props, {\n      categories: this.props.categories,\n      total: this.props.total,\n      onChangePriceRange: this.onChangePriceRange,\n      onChangeSearchOrder: this.onChangeSearchOrder\n    })), __jsx(SearchList, _extends({}, this.props, {\n      products: this.props.products,\n      mobileCheck: this.mobileCheck,\n      showMore: this.showMore,\n      hideShowMore: this.state.hideShowMore\n    })));\n  }\n\n}\n\nexport default Category;","map":null,"metadata":{},"sourceType":"module"}