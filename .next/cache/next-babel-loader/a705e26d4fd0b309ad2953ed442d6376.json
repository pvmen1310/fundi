{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nexport default class Configuration {\n  /**\r\n   * Global http request configuration\r\n   */\n  static initialize() {\n    axios.interceptors.request.use(config => {\n      // Do something before request is sent\n      return config;\n    }, () => {\n      // Do something with request error\n      console.log(error);\n      return _Promise.reject(error);\n    });\n    axios.interceptors.response.use(function (response) {\n      console.log(response); // Do something with response data\n\n      return response;\n    }, function (error) {\n      console.log(error); // Do something with response error\n\n      if (!error.response) {// Network error\n      } else {\n        console.log(error.response);\n        return _Promise.reject(error.response);\n      }\n    });\n  }\n\n  static clientSessionId() {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < 11; i++) text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n  }\n\n  static setHeader(key, value) {\n    axios.defaults.headers.common[key] = value;\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/fundi/fundi_new/fundi-next/lib/api/configuration.js"],"names":["axios","Configuration","initialize","interceptors","request","use","config","console","log","error","reject","response","clientSessionId","text","possible","i","charAt","Math","floor","random","length","setHeader","key","value","defaults","headers","common"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,aAAN,CAAoB;AAC/B;;;AAGA,SAAOC,UAAP,GAAoB;AAChBF,IAAAA,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACKC,MAAD,IAAU;AACN;AACA,aAAOA,MAAP;AACH,KAJL,EAKI,MAAK;AACD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,aAAO,SAAQC,MAAR,CAAeD,KAAf,CAAP;AACH,KATL;AAYAT,IAAAA,KAAK,CAACG,YAAN,CAAmBQ,QAAnB,CAA4BN,GAA5B,CACI,UAASM,QAAT,EAAmB;AACfJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ,EADe,CAEf;;AACA,aAAOA,QAAP;AACH,KALL,EAMI,UAASF,KAAT,EAAgB;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EADY,CAEZ;;AACA,UAAI,CAACA,KAAK,CAACE,QAAX,EAAqB,CACjB;AACH,OAFD,MAEO;AACHJ,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACE,QAAlB;AACA,eAAO,SAAQD,MAAR,CAAeD,KAAK,CAACE,QAArB,CAAP;AACH;AACJ,KAfL;AAiBH;;AAED,SAAOC,eAAP,GAAwB;AACpB,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,QAAQ,GAAG,gEAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EACIF,IAAI,IAAIC,QAAQ,CAACE,MAAT,CAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,QAAQ,CAACM,MAApC,CAAhB,CAAR;;AAEJ,WAAOP,IAAP;AACH;;AAED,SAAOQ,SAAP,CAAiBC,GAAjB,EAAsBC,KAAtB,EAA6B;AACzBvB,IAAAA,KAAK,CAACwB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BJ,GAA9B,IAAqCC,KAArC;AACH;;AA/C8B","sourcesContent":["import axios from 'axios';\r\n\r\nexport default class Configuration {\r\n    /**\r\n     * Global http request configuration\r\n     */\r\n    static initialize() {\r\n        axios.interceptors.request.use(\r\n            (config)=>{\r\n                // Do something before request is sent\r\n                return config;\r\n            },\r\n            ()=> {\r\n                // Do something with request error\r\n                console.log(error)\r\n                return Promise.reject(error);\r\n            }\r\n        );\r\n\r\n        axios.interceptors.response.use(\r\n            function(response) {\r\n                console.log(response);\r\n                // Do something with response data\r\n                return response;\r\n            },\r\n            function(error) {\r\n                console.log(error)\r\n                // Do something with response error\r\n                if (!error.response) {\r\n                    // Network error\r\n                } else {\r\n                    console.log(error.response)\r\n                    return Promise.reject(error.response);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    static clientSessionId(){\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        for (var i = 0; i < 11; i++)\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n        return text;\r\n    }\r\n\r\n    static setHeader(key, value) {\r\n        axios.defaults.headers.common[key] = value;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}