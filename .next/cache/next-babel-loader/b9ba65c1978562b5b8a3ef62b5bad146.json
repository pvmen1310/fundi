{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\fundi\\\\fundi_new\\\\fundi-next\\\\components\\\\Carousel\\\\carousel.jsx\";\nvar __jsx = React.createElement;\n// Carousel\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\nimport './carousel.scss';\nimport GoogleAds from '../GoogleAds';\nexport default class Carousel extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getNewTabUrl\", gameData => {\n      if (gameData) {\n        let url = '';\n\n        if (gameData.launch_by_player_url) {\n          url = 'http://' + gameData.launch_by_player_url;\n        } else {\n          url = `${gameData.scheme}://${window.location.host}/${this.props.locale}/slots/launcher/${gameData.query}`;\n        }\n\n        url = url.replace(/([^:]\\/)\\/+/g, \"$1\");\n        window.open(url, '', 'width=1250, height=750, left=0,top=0,menu=no, directories=no, titlebar=no, location=no, toolbar=no,scrollbars=yes,resizable=yes');\n      }\n    });\n\n    this.state = {\n      currentSlide: 0,\n      carousel_sliders: []\n    };\n  }\n\n  render() {\n    const config = {\n      arrows: false,\n      dots: true,\n      infinite: true,\n      speed: 500,\n      autoplay: true,\n      autoplaySpeed: 1000,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    };\n    let carouselNav = '';\n\n    if (this.props.mobileCheck()) {\n      carouselNav = !this.props.full && __jsx(\"nav\", {\n        className: \"carousel-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"carousel-nav-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.props.carousel.map((item, key) => item.slider_type != \"carousel\" ? __jsx(\"a\", {\n        href: item.slider_items[0].link_to_url,\n        rel: \"nofollow\",\n        className: \"item ml-1 mr-1\",\n        target: item.slider_items[0].link_target,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: item.slider_items[0].image_src,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })) : \"\")));\n    } else {\n      carouselNav = !this.props.full && __jsx(\"nav\", {\n        className: \"carousel-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"carousel-nav-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.props.carousel.map((item, key) => item.slider_type != \"carousel\" ? __jsx(\"a\", {\n        href: item.slider_items[0].link_to_url,\n        rel: \"nofollow\",\n        className: \"item mt-2 mb-2\",\n        target: item.slider_items[0].link_target,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: item.slider_items[0].image_src,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })) : \"\")));\n    }\n\n    return __jsx(\"section\", {\n      className: \"carousel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: this.props.full ? 'carousel-box-full' : 'carousel-box',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(Slider, _extends({\n      ref: slider => this.slider = slider\n    }, config, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), this.props.carousel && this.props.carousel.map((item, key) => item.slider_type != \"carousel\" ? __jsx(\"a\", {\n      href: item.slider_items[0].link_to_url + this.props.userId,\n      rel: \"nofollow\",\n      className: \"item mt-2 mb-2\",\n      target: item.slider_items[0].link_target,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: item.slider_items[0].image_src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })) : \"\"))))));\n  }\n\n}\nCarousel.propTypes = {\n  carousel: PropTypes.array,\n  full: PropTypes.bool,\n  type: PropTypes.string\n};","map":{"version":3,"sources":["D:/xampp/htdocs/fundi/fundi_new/fundi-next/components/Carousel/carousel.jsx"],"names":["React","Component","PropTypes","Slider","GoogleAds","Carousel","constructor","props","gameData","url","launch_by_player_url","scheme","window","location","host","locale","query","replace","open","state","currentSlide","carousel_sliders","render","config","arrows","dots","infinite","speed","autoplay","autoplaySpeed","slidesToShow","slidesToScroll","carouselNav","mobileCheck","full","carousel","map","item","key","slider_type","slider_items","link_to_url","link_target","image_src","slider","userId","propTypes","array","bool","type","string"],"mappings":"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","sourcesContent":["// Carousel\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Slider from 'react-slick';\r\n\r\nimport './carousel.scss';\r\nimport GoogleAds from '../GoogleAds';\r\n\r\nexport default class Carousel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentSlide: 0,\r\n            carousel_sliders : []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const config = {\r\n            arrows: false,\r\n            dots: true,\r\n            infinite: true,\r\n            speed: 500,\r\n            autoplay: true,\r\n            autoplaySpeed: 1000,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n        };\r\n\r\n        let carouselNav = '';\r\n        if(this.props.mobileCheck()) {\r\n              carouselNav = !this.props.full && (\r\n                    <nav className=\"carousel-nav\">\r\n                        <ul className=\"carousel-nav-menu\">\r\n                          {this.props.carousel.map((item, key) => item.slider_type != \"carousel\"  ? (\r\n                              <a href={item.slider_items[0].link_to_url} rel=\"nofollow\" className=\"item ml-1 mr-1\" target={item.slider_items[0].link_target} key={key}>\r\n                                  <img src={item.slider_items[0].image_src}  />\r\n                              </a>\r\n                          ) : \"\")}\r\n                        </ul>\r\n                    </nav>\r\n                 );\r\n        } else {\r\n            carouselNav = !this.props.full && (\r\n                    <nav className=\"carousel-nav\">\r\n                        <ul className=\"carousel-nav-menu\">\r\n                          {this.props.carousel.map((item, key) => item.slider_type != \"carousel\"  ? (\r\n                              <a href={item.slider_items[0].link_to_url} rel=\"nofollow\"className=\"item mt-2 mb-2\" target={item.slider_items[0].link_target} key={key}>\r\n                                  <img src={item.slider_items[0].image_src}  />\r\n                              </a>\r\n                          ) : \"\")}\r\n                        </ul>\r\n                    </nav>\r\n                 );\r\n        }\r\n\r\n\r\n        return (\r\n            <section className=\"carousel\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className={this.props.full ? 'carousel-box-full' : 'carousel-box'}>\r\n                            <Slider ref={slider => (this.slider = slider)} {...config}>\r\n                            {this.props.carousel && this.props.carousel.map((item, key) => item.slider_type != \"carousel\"  ? (\r\n                              <a href={item.slider_items[0].link_to_url+this.props.userId} rel=\"nofollow\"className=\"item mt-2 mb-2\" target={item.slider_items[0].link_target} key={key}>\r\n                                  <img src={item.slider_items[0].image_src}  />\r\n                              </a>\r\n                          ) : \"\")}\r\n                            </Slider>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n\r\n    getNewTabUrl = (gameData) =>{\r\n        if(gameData) {\r\n            let url ='';\r\n            if(gameData.launch_by_player_url) {\r\n                url = 'http://'+ gameData.launch_by_player_url;\r\n            } else {\r\n                url = `${gameData.scheme}://${window.location.host}/${this.props.locale}/slots/launcher/${gameData.query}`;\r\n            }\r\n            url = url.replace(/([^:]\\/)\\/+/g, \"$1\");\r\n            window.open(url, '', 'width=1250, height=750, left=0,top=0,menu=no, directories=no, titlebar=no, location=no, toolbar=no,scrollbars=yes,resizable=yes')\r\n        }\r\n    };\r\n}\r\n\r\n\r\nCarousel.propTypes = {\r\n    carousel: PropTypes.array,\r\n    full: PropTypes.bool,\r\n    type : PropTypes.string\r\n};\r\n"]},"metadata":{},"sourceType":"module"}