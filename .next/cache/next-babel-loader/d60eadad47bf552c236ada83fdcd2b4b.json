{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nexport default class Configuration {\n  /**\r\n   * Global http request configuration\r\n   */\n  static initialize() {\n    axios.interceptors.request.use(config => {\n      // Do something before request is sent\n      return config;\n    }, () => {\n      // Do something with request error\n      console.log(error);\n      return _Promise.reject(error);\n    });\n    axios.interceptors.response.use(response => {\n      console.log(response); // Do something with response data\n\n      return response;\n    }, error => {\n      return _Promise.reject(error);\n    });\n  }\n\n  static clientSessionId() {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < 11; i++) text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n  }\n\n  static setHeader(key, value) {\n    axios.defaults.headers.common[key] = value;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}